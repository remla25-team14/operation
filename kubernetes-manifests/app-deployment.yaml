apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentiment-stack-deployment # Renamed to reflect it's the whole stack
  labels:
    app: sentiment-stack # A common label for the pod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sentiment-stack
  template:
    metadata:
      labels:
        app: sentiment-stack
        # Add specific labels for monitoring if needed, e.g., for ServiceMonitor to select this pod
        # main-app: sentiment-app 
        # sidecar: model-service
    spec:
      containers:
      - name: sentiment-app-container
        image: ghcr.io/remla25-team14/app/app:latest # Or your specific SHA/version tag
        imagePullPolicy: Always
        ports:
        - name: app-http # Renamed for clarity
          containerPort: 5001 # Port your app.py listens on
        env:
        - name: MODEL_SERVICE_URL
          # Since model-service is in the same pod, app can reach it on localhost
          value: "http://localhost:5000" # <--- KEY CHANGE
        - name: APP_VERSION
          value: "k8s-multicontainer-v1"
        livenessProbe:
          httpGet:
            path: /
            port: app-http
          initialDelaySeconds: 20
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: app-http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

      - name: model-service-container
        image: ghcr.io/remla25-team14/model-service:latest # Or your specific SHA/version tag
        imagePullPolicy: Always
        ports:
        - name: model-http # Renamed for clarity
          containerPort: 5000 # Port model-service listens on
        env:
        - name: PORT # If your model service uses this ENV VAR
          value: "5000"
        # Add other ENV VARS or secrets for model-service if needed
        # (e.g., GITHUB_TOKEN if it still needs to download models from a private repo)
        # env:
        # - name: GITHUB_TOKEN
        #   valueFrom:
        #     secretKeyRef:
        #       name: github-secrets # You'd need to create this K8s Secret
        #       key: token
        # Add liveness/readiness probes for model-service if applicable
        # livenessProbe:
        #   httpGet:
        #     path: /health # Assuming model-service has a health endpoint
        #     port: model-http
        #   initialDelaySeconds: 30
        #   periodSeconds: 20